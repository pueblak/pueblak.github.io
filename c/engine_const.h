#ifndef CHESS_CONST_H
#define CHESS_CONST_H

#include <stdint.h>

typedef int16_t score_t;

const score_t MAX_SCORE = 32765;
const score_t MIN_SCORE = -32765;

const score_t S_KING = 20000;
const score_t S_QUEEN = 900;
const score_t S_ROOK = 500;
const score_t S_BISHOP = 330;
const score_t S_KNIGHT = 320;
const score_t S_PAWN = 100;

const uint8_t FLIP[64] = {
    56, 57, 58, 59, 60, 61, 62, 63,
    48, 49, 50, 51, 52, 53, 54, 55,
    40, 41, 42, 43, 44, 45, 46, 47,
    32, 33, 34, 35, 36, 37, 38, 39,
    24, 25, 26, 27, 28, 29, 30, 31,
    16, 17, 18, 19, 20, 21, 22, 23,
     8,  9, 10, 11, 12, 13, 14, 15,
     0,  1,  2,  3,  4,  5,  6,  7
};

const score_t SCORE_PAWN[64] = {
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 100, 100, 100, 100, 100, 100, 100,
      4,   8,  10,  16,  16,  10,   8,   4,
      0,   2,   4,   8,   8,   4,   2,   0,
      0,   2,   4,   8,   8,   4,   2,   0,
      0,   2,   4,   4,   4,   4,   2,   0,
      0,   2,   4, -12, -12,   4,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0
};

const score_t SCORE_KNIGHT[64] = {
    -150,  -20,  -10,   -5,   -5,  -10,  -20, -150,
     -20,  -10,   -2,    0,    0,   -2,  -10,  -20,
     -10,   -2,    4,    6,    6,    4,   -2,  -10,
      -5,    0,    6,    8,    8,    6,    0,   -5,
      -5,    0,    6,    8,    8,    6,    0,   -5,
      -8,   -2,    4,    6,    6,    4,   -2,   -8,
     -16,   -6,   -2,    0,    0,   -2,   -6,  -16,
     -30,  -20,  -10,   -8,   -8,  -10,  -20,  -30
};

const score_t SCORE_BISHOP[64] = {
    -10, -10, -10, -10, -10, -10, -10, -10,
    -10,   4,   4,   4,   4,   4,   4, -10,
      2,   4,   6,   6,   6,   6,   4,   2,
      2,   4,   6,   8,   8,   6,   4,   2,
      2,   4,   6,   8,   8,   6,   4,   2,
      2,   4,   6,   6,   6,   6,   4,   2,
      0,   8,   4,   4,   4,   4,   8,   0,
    -10, -10, -12, -10, -10, -12, -10, -10
};

const score_t SCORE_ROOK[64] = {
    10, 10, 10, 10, 10, 10, 10, 10,
    20, 20, 20, 20, 20, 20, 20, 20,
     0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,
     4,  4,  4,  6,  6,  4,  4,  4
};

const score_t SCORE_QUEEN[64] = {
    -10, -10,   2,   2,   2,   2, -10, -10,
    -10,   2,   2,   2,   2,   2,   2, -10,
      2,   2,   2,   3,   3,   2,   2,   2,
      2,   2,   3,   4,   4,   3,   2,   2,
      2,   2,   3,   4,   4,   3,   2,   2,
      2,   2,   2,   3,   3,   2,   2,   2,
    -10,   2,   2,   2,   2,   2,   2, -10,
    -10, -10,  -6,  -4,  -4,  -6, -10, -10
};

const score_t SCORE_KING[64] = {
    -48, -48, -48, -48, -48, -48, -48, -48,
    -48, -48, -48, -48, -48, -48, -48, -48,
    -48, -48, -48, -48, -48, -48, -48, -48,
    -48, -48, -48, -48, -48, -48, -48, -48,
    -48, -48, -48, -48, -48, -48, -48, -48,
    -48, -48, -48, -48, -48, -48, -48, -48,
     15,  20, -25, -30, -30, -45,  20,  15,
     20,  20,  20, -40,  10, -60,  20,  20
};

const score_t SCORE_KING_ENDGAME[64] = {
     0,  8, 16, 18, 18, 16,  8,  0,
     8, 16, 24, 32, 32, 24, 16,  8,
    16, 24, 32, 40, 40, 32, 24, 16,
    25, 32, 40, 48, 48, 40, 32, 25,
    25, 32, 40, 48, 48, 40, 32, 25,
    16, 24, 32, 40, 40, 32, 24, 16,
     8, 16, 24, 32, 32, 24, 16,  8,
     0,  8, 16, 18, 18, 16,  8,  0
};

const score_t CAPTURE_TABLE[7][7] = {
//   0   K   Q   R   B   N   P   is targeted
  {  0,  0,  0,  0,  0,  0,  0 }, // empty
  {  0,  0, 50, 40, 30, 29, 15 }, // K captures
  {  0,  0, 41, 21, 11, 10,  1 }, // Q captures
  {  0,  0, 45, 35, 25, 24,  5 }, // R captures
  {  0,  0, 47, 37, 27, 26,  7 }, // B captures
  {  0,  0, 48, 38, 31, 28,  8 }, // N captures
  {  0,  0, 52, 51, 42, 22, 12 }  // P captures
};

const score_t CHECK_TABLE[7] = { 0, 33, 34, 43, 53, 54, 60 };

const score_t PROMOTE_TABLE[7] = { 0, 0, 19, 16, 14, 13, 0 };

#endif